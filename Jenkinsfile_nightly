#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 05 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://pcq-loader-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'PCQ_BACKEND_URL', defaultValue: 'http://pcq-backend-aat.service.core-compute-aat.internal', description: 'The PCQ backend URL'),
    string(name: 'SecurityRules',
      defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "pcq"
def component = "loader"

def secrets = [
  'pcq-${env}': [
    secret( 'jwt-secret', 'JWT_SECRET'),
    secret( 'pcq-storage-account-name', 'STORAGE_ACCOUNT_NAME'),
    secret( 'pcq-storage-account-primary-access-key', 'STORAGE_KEY')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

GradleBuilder builder = new GradleBuilder(this, product)

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.URL_TO_TEST
  env.PCQ_BACKEND_URL = params.PCQ_BACKEND_URL
  env.Rules = params.SecurityRules
  env.STORAGE_URL = "https://pcqsharedaat.blob.core.windows.net"

  loadVaultSecrets(secrets)

  enableAksStagingDeployment()
  disableLegacyDeployment()
  nonServiceApp()

  //enableSecurityScan()

  enableMutationTest()
  after('mutationTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'builds/reports/pitest/**/*'
  }

  enableFullFunctionalTest()
  before('fullFunctionalTest') {
    echo "Loading the secrets again"
    loadVaultSecrets(secrets)

    // To run functional tests
    env.PCQ_BACKEND_URL = "http://pcq-backend-aat.service.core-compute-aat.internal"
    env.STORAGE_URL = "https://pcqsharedaat.blob.core.windows.net"

    echo "Just waiting a while to ensure that the pod has run the job"
    sh "sleep 120s"
    echo "Verifying that functional test data was processed correctly"
    try {
      builder.gradle('functionalPostDeploy')
    } finally {
      junit '**/test-results/**/*.xml'
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/test-results/**'
    }
  }

  enableSlackNotifications('#pcq-builds')
}
