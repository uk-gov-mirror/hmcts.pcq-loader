buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.0'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'org.owasp.dependencycheck' version '6.0.1'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id "info.solidsoft.pitest" version '1.4.7'
    id 'org.sonarqube' version '2.8'
    id 'com.gorylenko.gradle-git-properties' version '2.2.2'
    id "io.freefair.lombok" version "5.0.0-rc4"
}

apply plugin: "com.gorylenko.gradle-git-properties"

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/reform/pcqloader/gitcommit")
    keys = ['git.commit.id','git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

sourceSets {
    test {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/test/java')
        }
        resources.srcDir file('src/test/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task unit(type: Test, description: 'Runs the unit tests.', group: 'Verification') {
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform()
}

task functional() {
  // This task is required for a Jenkins hook (fullFunctionalTest)
}

task functionalPostDeploy(type: Test) {
    group = 'Functional Tests'
    description = 'Verifies that files from functionPreDeploy step were processed following job creation in AKS'
    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)
    setClasspath(sourceSets.functionalTest.runtimeClasspath)
    include "uk/gov/hmcts/reform/pcqloader/postdeploy/**"
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    useJUnitPlatform()
}

pmd {
    toolVersion = "6.28.0"
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    // https://github.com/pmd/pmd/issues/876
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

project.tasks['jacocoTestReport'].dependsOn test, integration

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

pitest {
    junit5PluginVersion = '0.12'
    targetClasses = ['uk.gov.hmcts.reform.pcqloader.*']
    threads = 10
    enableDefaultIncrementalAnalysis = true
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 50
    timeoutConstInMillis = 30000

}

project.tasks['pitest'].group = "Verification"

sonarqube {
    properties {
        property "sonar.projectName", "Reform :: pcq-loader"
        property "sonar.projectKey", "uk.gov.hmcts.reform:pcq-loader"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyManagement {
    dependencies {
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.64'
        // CVE-2018-10237 - Unbounded memory allocation
        dependencySet(group: 'com.google.guava', version: '28.2-jre') {
            entry 'guava'
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/hmcts/hmcts-maven"
    }
}

def versions = [
        junit               : '5.5.0',
        reformLogging       : '5.1.1',
        springBoot          : springBoot.class.package.implementationVersion,
        springfoxSwagger    : '2.9.2',
        restAssured         : '4.2.0',
        lombok              : '1.18.12',
        gradlePitest        : '1.4.7',
        pitest              : '1.4.7',
        sonarPitest         : '0.5'
]

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['org.apache.logging.log4j']) {
                details.useVersion '2.13.2'
            }
            if (details.requested.group in ['org.scala-lang']) {
                details.useVersion '2.12.10'
            }
            if (details.requested.group in ['org.apache.tomcat.embed']) {
                details.useVersion '9.0.37'
            }
        }
    }
}

dependencies {
    // exclude spring-cloud-context as it is already included in spring-cloud-starter-netflix-hystrix
    def withoutSpringCloudContext = {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-context'
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web-services'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

    implementation group: 'com.microsoft.azure', name: 'azure-storage', version: '8.6.5'
    implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.8.0'

    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.0'

    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.1.RELEASE'

    compile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    compile group: "com.networknt", name: "json-schema-validator", version: "1.0.31"

    compile group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
    compile group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.0.4', withoutSpringCloudContext
    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    compile group: "com.gilecode.yagson", name:"j9-reflection-utils", version:"1.0"

    implementation group: "io.jsonwebtoken", name: "jjwt", version: "0.9.1"


    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.security', name: 'spring-security-test'

    testCompile group: 'org.pitest', name: 'pitest', version: versions.pitest
    testCompile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.7'
    testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

    testCompile group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    testCompile group: 'io.rest-assured', name: 'json-path', version: '4.2.0'

    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.4.6'
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'

    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.19.0'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
    testImplementation group: "com.gilecode.yagson", name:"j9-reflection-utils", version:"1.0"
    testImplementation group: "io.jsonwebtoken", name: "jjwt", version: "0.9.1"
    testImplementation group: "org.testcontainers", name: "junit-jupiter", version:"1.14.3"

    integrationTestCompile sourceSets.main.runtimeClasspath
    integrationTestCompile sourceSets.test.runtimeClasspath

    functionalTestCompile sourceSets.main.runtimeClasspath
    functionalTestCompile sourceSets.test.runtimeClasspath
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    smokeTestCompile group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    smokeTestCompile group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
    smokeTestRuntime group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    smokeTestRuntime group: 'io.rest-assured', name: 'json-path', version: '4.2.0'

    smokeTestCompile sourceSets.main.runtimeClasspath
    smokeTestCompile sourceSets.test.runtimeClasspath
}

test {
    useJUnitPlatform()
    failFast = true
}

mainClassName = 'uk.gov.hmcts.reform.pcqloader.PcqLoaderApplication'

bootJar {
    archiveName = 'pcq-loader.jar'

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}
